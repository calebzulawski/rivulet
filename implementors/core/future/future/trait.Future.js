(function() {var implementors = {};
implementors["rivulet"] = [{"text":"impl&lt;'a, T&gt; Future for Reserve&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sink + Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Future for Commit&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sink + Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Future for Request&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Source + Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Future for Consume&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Source + Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R, S&gt; Future for ReadToSink&lt;R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Read,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin + Sink&lt;Item = u8&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;W, S&gt; Future for WriteFromSource&lt;W, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Write,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin + Source&lt;Item = u8&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()