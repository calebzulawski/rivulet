(function() {var implementors = {};
implementors["rivulet"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> for <a class=\"struct\" href=\"rivulet/io/struct.Writer.html\" title=\"struct rivulet::io::Writer\">Writer</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"rivulet/view/trait.ViewMut.html\" title=\"trait rivulet::view::ViewMut\">ViewMut</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T::<a class=\"type\" href=\"rivulet/view/trait.View.html#associatedtype.Error\" title=\"type rivulet::view::View::Error\">Error</a>&gt;,&nbsp;</span>","synthetic":false,"types":["rivulet::io::Writer"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()