var searchIndex = JSON.parse('{\
"rivulet":{"doc":"Rivulet provides tools for creating and processing …","i":[[0,"buffer","rivulet","Asynchronous buffers for temporarily caching data.",null,null],[0,"circular_buffer","rivulet::buffer","Async circular buffers.",null,null],[0,"spmc","rivulet::buffer::circular_buffer","A single-producer, multiple-consumer async circular …",null,null],[5,"buffer","rivulet::buffer::circular_buffer::spmc","Creates a single-producer, multiple-consumer async …",null,[[]]],[3,"BufferSink","","Write values to the associated <code>BufferSource</code>s.",null,null],[3,"BufferSource","","Read values from the associated <code>BufferSink</code>.",null,null],[0,"spsc","rivulet::buffer::circular_buffer","A single-producer, single-consumer async circular buffer.",null,null],[5,"buffer","rivulet::buffer::circular_buffer::spsc","Creates a single-producer, single-consumer async circular …",null,[[]]],[3,"BufferSink","","Write values to the associated <code>BufferSource</code>.",null,null],[3,"BufferSource","","Read values from the associated <code>BufferSink</code>.",null,null],[0,"io","rivulet","Utilities for working with [<code>std::io</code>].",null,null],[4,"Error","rivulet::io","An error produced either by an I/O operation or by a …",null,null],[13,"IoError","","",0,null],[13,"StreamError","","",0,null],[3,"ReadToSink","","Buffers a [<code>std::io::Read</code>] into a <code>Sink</code>.",null,null],[11,"new","","Creates a new <code>ReadToSink</code> with a default read buffer size …",1,[[]]],[11,"unbuffered","","Creates a new unbuffered <code>ReadToSink</code>.",1,[[]]],[11,"with_read_size","","Creates a new <code>ReadToSink</code> with the specified read buffer …",1,[[]]],[3,"WriteFromSource","","Buffers a [<code>std::io::Write</code>] from a <code>Source</code>.",null,null],[11,"new","","Creates a new <code>WriteFromSource</code> with a default write buffer …",2,[[]]],[11,"unbuffered","","Creates a new unbuffered <code>WriteFromSource</code>.",2,[[]]],[11,"with_write_size","","Creates a new <code>WriteFromSource</code> with the specified write …",2,[[]]],[4,"Error","rivulet","An error produced when polling a <code>Sink</code> or <code>Source</code>.",null,null],[13,"Closed","","The stream is closed and cannot be accessed.",3,null],[13,"Overflow","","The request is malformed and results in a buffer overflow.",3,null],[13,"Other","","Some other implementation-specific error.",3,null],[3,"Reserve","","Future produced by [<code>Sink::reserve</code>].",null,null],[3,"Commit","","Future produced by [<code>Sink::commit</code>].",null,null],[3,"Request","","Future produced by [<code>Source::request</code>].",null,null],[3,"Consume","","Future produced by [<code>Source::consume</code>].",null,null],[8,"Sink","","Interface for asynchronous contiguous-memory sinks.",null,null],[16,"Item","","The type to be written.",4,null],[10,"sink","","The mutable buffer for writing data.",4,[[]]],[10,"poll_reserve","","Attempt to reserve at least <code>count</code> elements in the …",4,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"poll_commit","","Attempt to commit the first <code>count</code> elements in the …",4,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"reserve","","Create a future that reserves at least <code>count</code> elements in …",4,[[],["reserve",3]]],[11,"commit","","Create a future that commits the first <code>count</code> elements in …",4,[[],["commit",3]]],[11,"blocking_reserve","","Reserve at least <code>count</code> elements in the writable buffer, …",4,[[],[["result",4],["error",4]]]],[11,"blocking_commit","","Commit the first <code>count</code> elements in the writable buffer to …",4,[[],[["result",4],["error",4]]]],[8,"Source","","Interface for asynchronous contiguous-memory sources.",null,null],[16,"Item","","The type to be read.",5,null],[10,"source","","The buffer for reading data.",5,[[]]],[10,"poll_request","","Attempt to read at least <code>count</code> elements into the buffer.",5,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"poll_consume","","Attempt to advance past the first <code>count</code> elements in the …",5,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"request","","Create a future that reads at least <code>count</code> elements into …",5,[[],["request",3]]],[11,"consume","","Create a future that advances past the first <code>count</code> …",5,[[],["consume",3]]],[11,"blocking_request","","Reads at least <code>count</code> elements into the buffer, blocking …",5,[[],[["result",4],["error",4]]]],[11,"blocking_consume","","Advances past the first <code>count</code> elements in the buffer, …",5,[[],[["result",4],["error",4]]]],[8,"SourceMut","","Interface for asynchronous contiguous-memory mutable …",null,null],[10,"source_mut","","The mutable buffer for reading data.",6,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"try_poll","","",7,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_future","","",8,[[]]],[11,"try_poll","","",8,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_future","","",9,[[]]],[11,"try_poll","","",9,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_future","","",10,[[]]],[11,"try_poll","","",10,[[["pin",3],["context",3]],["poll",4]]],[11,"from","rivulet::buffer::circular_buffer::spmc","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","rivulet::buffer::circular_buffer::spsc","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","rivulet::io","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_future","","",1,[[]]],[11,"try_poll","","",1,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_future","","",2,[[]]],[11,"try_poll","","",2,[[["pin",3],["context",3]],["poll",4]]],[11,"sink","rivulet::buffer::circular_buffer::spmc","",11,[[]]],[11,"poll_reserve","","",11,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_commit","","",11,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"sink","rivulet::buffer::circular_buffer::spsc","",13,[[]]],[11,"poll_reserve","","",13,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_commit","","",13,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"source","rivulet::buffer::circular_buffer::spmc","",12,[[]]],[11,"poll_request","","",12,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_consume","","",12,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"source","rivulet::buffer::circular_buffer::spsc","",14,[[]]],[11,"poll_request","","",14,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_consume","","",14,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"source_mut","","",14,[[]]],[11,"from","rivulet::io","",0,[[["error",3]]]],[11,"from","","",0,[[["error",4]]]],[11,"clone","rivulet::buffer::circular_buffer::spmc","",12,[[],["buffersource",3]]],[11,"fmt","rivulet","",3,[[["formatter",3]],["result",6]]],[11,"fmt","rivulet::io","",0,[[["formatter",3]],["result",6]]],[11,"fmt","rivulet","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rivulet::io","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"source","rivulet","",3,[[],[["option",4],["error",8]]]],[11,"source","rivulet::io","",0,[[],[["option",4],["error",8]]]],[11,"poll","rivulet","",7,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",8,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",9,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",10,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","rivulet::io","",1,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",2,[[["context",3],["pin",3]],["poll",4]]],[11,"reserve","rivulet","Create a future that reserves at least <code>count</code> elements in …",4,[[],["reserve",3]]],[11,"commit","","Create a future that commits the first <code>count</code> elements in …",4,[[],["commit",3]]],[11,"blocking_reserve","","Reserve at least <code>count</code> elements in the writable buffer, …",4,[[],[["result",4],["error",4]]]],[11,"blocking_commit","","Commit the first <code>count</code> elements in the writable buffer to …",4,[[],[["result",4],["error",4]]]],[11,"request","","Create a future that reads at least <code>count</code> elements into …",5,[[],["request",3]]],[11,"consume","","Create a future that advances past the first <code>count</code> …",5,[[],["consume",3]]],[11,"blocking_request","","Reads at least <code>count</code> elements into the buffer, blocking …",5,[[],[["result",4],["error",4]]]],[11,"blocking_consume","","Advances past the first <code>count</code> elements in the buffer, …",5,[[],[["result",4],["error",4]]]]],"p":[[4,"Error"],[3,"ReadToSink"],[3,"WriteFromSource"],[4,"Error"],[8,"Sink"],[8,"Source"],[8,"SourceMut"],[3,"Reserve"],[3,"Commit"],[3,"Request"],[3,"Consume"],[3,"BufferSink"],[3,"BufferSource"],[3,"BufferSink"],[3,"BufferSource"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);