var searchIndex = JSON.parse('{\
"rivulet":{"doc":"Rivulet provides tools for creating and processing …","i":[[0,"buffer","rivulet","Asynchronous buffers for temporarily caching data.",null,null],[0,"circular_buffer","rivulet::buffer","Async circular buffers.",null,null],[0,"spmc","rivulet::buffer::circular_buffer","A single-producer, multiple-consumer async circular …",null,null],[5,"buffer","rivulet::buffer::circular_buffer::spmc","Creates a single-producer, multiple-consumer async …",null,[[]]],[3,"BufferSink","","Write values to the associated <code>BufferSource</code>s.",null,null],[3,"BufferSource","","Read values from the associated <code>BufferSink</code>.",null,null],[0,"spsc","rivulet::buffer::circular_buffer","A single-producer, single-consumer async circular buffer.",null,null],[5,"buffer","rivulet::buffer::circular_buffer::spsc","Creates a single-producer, single-consumer async circular …",null,[[]]],[3,"BufferSink","","Write values to the associated <code>BufferSource</code>.",null,null],[3,"BufferSource","","Read values from the associated <code>BufferSink</code>.",null,null],[4,"Error","rivulet","An error produced when polling a <code>Sink</code> or <code>Source</code>.",null,null],[13,"Closed","","The stream is closed and cannot be accessed.",0,null],[13,"Overflow","","The request is malformed and results in a buffer overflow.",0,null],[13,"Other","","Some other implementation-specific error.",0,null],[3,"Reserve","","Future produced by [<code>Sink::reserve</code>].",null,null],[3,"Commit","","Future produced by [<code>Sink::commit</code>].",null,null],[3,"Request","","Future produced by [<code>Source::request</code>].",null,null],[3,"Consume","","Future produced by [<code>Source::consume</code>].",null,null],[8,"Sink","","Interface for asynchronous contiguous-memory sinks.",null,null],[16,"Item","","The type to be written.",1,null],[10,"sink","","The mutable buffer for writing data.",1,[[]]],[10,"poll_reserve","","Attempt to reserve at least <code>count</code> elements in the …",1,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"poll_commit","","Attempt to commit the first <code>count</code> elements in the …",1,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"reserve","","Create a future that reserves at least <code>count</code> elements in …",1,[[],["reserve",3]]],[11,"commit","","Create a future that commits the first <code>count</code> elements in …",1,[[],["commit",3]]],[11,"blocking_reserve","","Reserve at least <code>count</code> elements in the writable buffer, …",1,[[],[["error",4],["result",4]]]],[11,"blocking_commit","","Commit the first <code>count</code> elements in the writable buffer to …",1,[[],[["error",4],["result",4]]]],[8,"Source","","Interface for asynchronous contiguous-memory sources.",null,null],[16,"Item","","The type to be read.",2,null],[10,"source","","The buffer for reading data.",2,[[]]],[10,"poll_request","","Attempt to read at least <code>count</code> elements into the buffer.",2,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"poll_consume","","Attempt to advance past the first <code>count</code> elements in the …",2,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"request","","Create a future that reads at least <code>count</code> elements into …",2,[[],["request",3]]],[11,"consume","","Create a future that advances past the first <code>count</code> …",2,[[],["consume",3]]],[11,"blocking_request","","Reads at least <code>count</code> elements into the buffer, blocking …",2,[[],[["error",4],["result",4]]]],[11,"blocking_consume","","Advances past the first <code>count</code> elements in the buffer, …",2,[[],[["error",4],["result",4]]]],[8,"SourceMut","","Interface for asynchronous contiguous-memory mutable …",null,null],[10,"source_mut","","The mutable buffer for reading data.",3,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_future","","",4,[[]]],[11,"try_poll","","",4,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_future","","",5,[[]]],[11,"try_poll","","",5,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_future","","",6,[[]]],[11,"try_poll","","",6,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"try_poll","","",7,[[["pin",3],["context",3]],["poll",4]]],[11,"from","rivulet::buffer::circular_buffer::spmc","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","rivulet::buffer::circular_buffer::spsc","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"sink","rivulet::buffer::circular_buffer::spmc","",8,[[]]],[11,"poll_reserve","","",8,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_commit","","",8,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"sink","rivulet::buffer::circular_buffer::spsc","",10,[[]]],[11,"poll_reserve","","",10,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_commit","","",10,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"source","rivulet::buffer::circular_buffer::spmc","",9,[[]]],[11,"poll_request","","",9,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_consume","","",9,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"source","rivulet::buffer::circular_buffer::spsc","",11,[[]]],[11,"poll_request","","",11,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_consume","","",11,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"source_mut","","",11,[[]]],[11,"clone","rivulet::buffer::circular_buffer::spmc","",9,[[],["buffersource",3]]],[11,"fmt","rivulet","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"poll","","",4,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",5,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",6,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",7,[[["context",3],["pin",3]],["poll",4]]],[11,"reserve","","Create a future that reserves at least <code>count</code> elements in …",1,[[],["reserve",3]]],[11,"commit","","Create a future that commits the first <code>count</code> elements in …",1,[[],["commit",3]]],[11,"blocking_reserve","","Reserve at least <code>count</code> elements in the writable buffer, …",1,[[],[["error",4],["result",4]]]],[11,"blocking_commit","","Commit the first <code>count</code> elements in the writable buffer to …",1,[[],[["error",4],["result",4]]]],[11,"request","","Create a future that reads at least <code>count</code> elements into …",2,[[],["request",3]]],[11,"consume","","Create a future that advances past the first <code>count</code> …",2,[[],["consume",3]]],[11,"blocking_request","","Reads at least <code>count</code> elements into the buffer, blocking …",2,[[],[["error",4],["result",4]]]],[11,"blocking_consume","","Advances past the first <code>count</code> elements in the buffer, …",2,[[],[["error",4],["result",4]]]]],"p":[[4,"Error"],[8,"Sink"],[8,"Source"],[8,"SourceMut"],[3,"Reserve"],[3,"Commit"],[3,"Request"],[3,"Consume"],[3,"BufferSink"],[3,"BufferSource"],[3,"BufferSink"],[3,"BufferSource"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);